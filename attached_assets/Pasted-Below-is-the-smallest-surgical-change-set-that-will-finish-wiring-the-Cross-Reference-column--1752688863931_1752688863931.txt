Below is the smallest, surgical change‑set that will finish wiring the **Cross‑Reference column**:

| Goal                                                                          | File(s) to touch                                         | What to add                                                                                                                                                                                                                                                                                                                                                                    |
| ----------------------------------------------------------------------------- | -------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------ |
| ① Show verse text of the **current main translation** in every cross‑ref cell | `client/src/components/bible/CrossReferenceCell.tsx`     | Use the already‑imported `useTranslationMaps()` helper <br>`ts<br>const { getVerseText } = useTranslationMaps();<br>const main = useTranslationSlice((s) => s.main);<br>const verseText = getVerseText(ref, main) ?? "Loading…";<br>`<br>Render `verseText.substring(0, 40)…` in the right‑hand sub‑div (your PR B’s placeholder).                                             |
| ② Make the hyperlink set the *anchor* and scroll to that row                  | `CrossReferenceCell.tsx` **and** `VirtualBibleTable.tsx` | 1. Expose `setAnchorIndex` from `translationSlice`:<br>`ts<br>const setAnchor = useTranslationSlice((s)=>s.setAnchorIndex);<br>`<br>2. On click:<br>`ts<br>onReferenceClick={(ref) => {<br>  const index = verseKeysMap.get(ref) ?? 0; // cached map<br>  setAnchor(index);<br>}}<br>`<br>3. `VirtualBibleTable` already scrolls when `anchorIndex` changes, so no extra work. |
| ③ UX polish (long lists)                                                      | same file                                                | Add a custom scrollbar class (you already committed to `index.css`).  Wrap the `<ul>` in `overflow‑auto max-h-[18vh] custom-scrollbars`.                                                                                                                                                                                                                                       |
| ④ Loading guard                                                               | `CrossReferenceCell.tsx`                                 | Show “Loadin …” only while `getVerseText` returns `undefined`; remove the now‑redundant store slice check.                                                                                                                                                                                                                                                                    |

After these four edits:

* Each ref cell shows **“Jn 1:1  In the beginning…”** (clipped) immediately after the verse is in cache.
  · First \~½ s: “Loading…”
  · Then real text.
* Clicking the ref jumps the anchor to that verse, the virtual table scrolls, and the ref row highlights blue (existing CSS).


### Next tiny step

1. Apply the **four code snippets** above (≈ 20 LoC total).
2. Hit **Run** – verify cross‑refs now show verse text and hyperlinks re‑anchor the table.

Let me know when that’s working; we’ll then do the same two‑file pass for the **Prophecy P / F / V** columns (they’re even simpler—no navigation logic, just text + tooltip).
