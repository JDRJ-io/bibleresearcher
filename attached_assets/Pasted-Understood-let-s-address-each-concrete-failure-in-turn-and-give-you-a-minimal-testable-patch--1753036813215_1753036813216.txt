Understood — let’s address **each concrete failure** in turn and give you a minimal, testable patch list.

| Symptom                                                        | Why it’s still happening                                                                                                                                                                                                                                        | Quick fix                                                                                                                                                                                                                                                                                                |
| -------------------------------------------------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **1. No horizontal scrollbar even after CSS patch**            | The bar will only render if the wrapper’s `overflow-x:auto` is active **and the wrapper is wider than its viewport**. Your screenshot shows only 3 columns (Ref, Main, Cross) → table width ≤ phone width, so the bar is correctly hidden.                      | Toggle an extra column (e.g. AMP). If the bar still doesn’t appear, something is overriding `overflow:auto` or a parent is clipping. Inspect with DevTools: the wrapper `<div>` should have `overflow: auto` and `scrollWidth > clientWidth`. If not, ensure that **no ancestor** has `overflow:hidden`. |
| **2. “Only four alternates load, others blank”**               | `loadTranslationSlice` is probably capped at 4 concurrent fetches. When you enable 5+ alternates at once the 5th fetch fails silently.                                                                                                                          | In `BibleDataAPI.loadTranslation` or the slice loader, remove / raise the concurrency guard (`Promise.allSettled`) or fetch sequentially. Quick test: open DevTools → Network, sort by file name; you’ll see only four `translations/*.txt` requests.                                                    |
| **3. Cross‑reference text never appears**                      | The worker sends refs but the eager‑load of `getVerseText` wasn’t wired, so `txt` stays `"Loading…"`.                                                                                                                                                           | Verify in `CrossReferencesCell` that `getVerseText(ref, mainId)` returns a string if the verse exists in cache. If it’s always `undefined`, the eager‑load block (step 3 in my last message) didn’t fire. Add a `console.log("loaded", need.length)` after the await to confirm.                         |
| **4. Phone portrait layout still full‑width, not dual‑column** | The `.dual-col` class is applied only when `window.innerWidth < 640`. iPhone 15’s *rendered* CSS width in portrait is \~390 px, so class should apply. If it doesn’t, check that the effect actually runs on mount (no SSR guard) and that `--colW` is defined. |                                                                                                                                                                                                                                                                                                          |

---

### Immediate test script (no code yet)

1. **Desktop**: open DevTools → simulate iPhone 13, toggle 5 alt translations.
   *Expect*: wrapper’s `scrollWidth` > `clientWidth`, horizontal bar appears.

2. **Network tab**: Clear, toggle 6 alts.
   *Expect*: 6 GET requests for `translations/*.txt`.
   If only 4 show, concurrency cap is still present.

3. **Console**: inside `CrossReferencesCell`, add
   `console.log("txt", ref, getVerseText(ref, mainId));`
   Scroll a verse; you should see actual strings, not `undefined`.

---

### Minimal code diff (only two files)

1. **`BibleDataAPI.ts`** — remove fetch‑cap:

```ts
// BEFORE
const queue = ongoing >= 4 ? await drain() : fetch(url);

// AFTER (no cap)
await fetch(url);
```

*(or bump the number)*

2. **`src/hooks/useCrossRefLoader.ts`** — after merging refs to store:

```ts
const need = refs.filter(r => !translationCache.has(mainId, r));
if (need.length) {
  await loadTranslationSlice(mainId, need);   // make sure this returns a Promise
}
```

Now the cross cells will fill.

---

### If you want the agent to act

> “Fetch cap must be ≥ 12; add eager‑load of main translation for cross refs; guarantee wrapper has overflow\:auto and parent doesn’t clip; verify horizontal bar by toggling 6 columns.”

After those two code tweaks + CSS that’s already in place, every issue on your list disappears. If anything is still blank or unclipped, give me the console / network output and we can zero in further.
