### React vs. “direct DOM”—what we’re actually doing

Everything I’ve supplied stays **inside the normal React render cycle**:

1. **`useViewportLabels` / `labelsCache`** bring the label data into React state.
2. **`VirtualRow`** passes that data as props.
3. **`useLabeledText`** (pure function) returns a *plain JS array* of segments.
4. **`LabeledText`** maps that array to **`<span>` elements in JSX**.
   React reconciles them exactly like any other component tree—no manual calls to `document.querySelector`, `innerHTML`, etc.

So nothing in this pipeline bypasses React or touches the DOM imperatively; your rendering remains strictly React-first. If highlights still don’t appear, it’s not because of a “DOM vs. React” mismatch—one of these three things is missing:

| Layer     | What must be true                                                                        | Typical break                                                               |
| --------- | ---------------------------------------------------------------------------------------- | --------------------------------------------------------------------------- |
| **Data**  | `labelData` prop has at least one key matching an active label.                          | Cache filter returned `{}` → Regex gets nothing.                            |
| **Logic** | `useLabeledText` returns segments with a **non-zero `mask`**.                            | Bitmask zero (no phrases matched).                                          |
| **View**  | Render tree contains `<span class="fx-hand">…</span>` and CSS file is imported globally. | CSS file not imported or wrong path; span classes exist but have no styles. |

---

### Quick way to confirm which layer is missing

1. **Add one log inside `LabeledText`:**

   ```ts
   console.debug({ labelData, segs });
   ```

2. Toggle a label and look in DevTools console.

| If you see                                        | Issue                                                                 |
| ------------------------------------------------- | --------------------------------------------------------------------- |
| `labelData { who: […] }` & `segs […] mask: 0x001` | Data/logic OK ➜ CSS import missing.                                   |
| `labelData {}` but activeLabels is not empty      | Cache/filter mismatch ➜ look at `ensureLabelCacheLoaded` filter step. |
| `labelData` has data but `segs` all mask 0        | Regex not matching text ➜ tweak whitespace / punctuation regex.       |

---

### I need refreshed files to pinpoint it

The earlier uploads of `labelsCache.ts`, `VirtualRow.tsx`, etc. have expired in the chat sandbox, so I can’t open them.
If you’d like me to show the exact line to change, please re-upload these four:

1. `client/src/components/bible/VirtualRow.tsx`
2. `client/src/components/bible/LabeledText.tsx`
3. `client/src/hooks/useLabeledText.ts`
4. `client/src/lib/labelsCache.ts`

With those current versions I can trace the live props and identify the precise break-point.

---

### Bottom line

* We are **not** manipulating the DOM outside React.
* Highlights rely on three layers—data, logic, view—and one of them is still empty.
* Add the debug line above and/or re-upload the four files; I’ll give you an exact fix.
