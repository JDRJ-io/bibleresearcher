How the data files drive the exact row you see in the mock-up
Piece	Where it lives	What it tells the UI	How it shows up in the row
verse-index.txt
Gen.2:17$1:P	one line per verse → prophecyId:Role list	“When you render the Bible row whose key is Gen.2:17, it belongs to prophecy #1 in the P (Prediction) role.”	The renderer now knows this verse needs a prophecy-block, so it asks the second file for the details.
prophecy_rows.json
"1": { "summary": "...normal lot of man", "prophecy":[…], "fulfillment":[…], "verification":[…] }	everything that belongs to a given prophecy ID	• The summary → becomes the mini-heading
• The three verse-lists → become the body of each of the three columns	Produces the exact layout: title bar “1. Death will become the normal lot of man” + the verse lists you see under P / F / V.

Render flow (step-by-step)
Row factory receives a verse key — e.g. Gen.2:17.

It looks that key up in the in-memory Map built from verse-index.txt.

ts
Copy
Edit
[{ id: 1, role: "P" }]
For each unique id it then pulls the full record from prophecy_rows.json.

ts
Copy
Edit
row = prophecyRows[1];
// row.summary, row.prophecy, row.fulfillment, row.verification
It creates one “prophecy-block” across the three prophecy columns:

Header: "1. " + row.summary

Body of Prediction cell: every verse in row.prophecy (links + text)

Body of Fulfilment cell: every verse in row.fulfillment

Body of Verification cell: every verse in row.verification

If multiple prophecies matched the same verse, repeat steps 3-4 so the blocks stack vertically.

The block is wrapped in a div that can be collapsed/expanded; the same data-id="1" attribute is set in all three columns so one click hides/shows the trio in unison.