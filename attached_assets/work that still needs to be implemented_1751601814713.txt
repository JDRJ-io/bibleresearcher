
| Sub‚Äësystem                          | Spec says it must‚Ä¶                                                                        | What the 3rd build actually does (evidence)                                                                   | Therefore we still need‚Ä¶                                                                                                                          |
| ----------------------------------- | ----------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------------------------------------------------- |
| **Translations**                    | ‚ÄúMulti‚Äëselect, show up to‚ÄØ12 verse columns at once.‚Äù                                      | `index.html` has a single button **Toggle Translation (KJV/AMP)**‚Äîno checklist, no dynamic column injection.  | ‚Ä¢ Replace hard‚Äëcoded toggle with checklist builder.<br>‚Ä¢ Insert extra `.col-verse‚Äë<code>` cells and header cells on the fly.                      |
| **Prophecy columns**                | Three columns **Pred / Ful /‚ÄØVerif‚ÄØ+ summary title**.                                     | `createRowElement()` only builds `col-pred` and `col-ful`; no `col-verif`, no per‚Äëprophecy title.             | ‚Ä¢ Extend parser to read the 5‚Äëfield schema.<br>‚Ä¢ Render a `col-verif` and a small `<div class="prop-title">#‚ÄØn ¬∑ summary</div>` above each block. |
| **Cross‚Äëref set switcher**          | Radio to swap instantly between `cf1` & `cf2`.                                            | Only one cross‚Äëref file is fetched and stored in `crossRefs`.                                                 | ‚Ä¢ Fetch both files; on change handler swap pointer and `reRenderAllRows()`.                                                                       |
| **Chronological order**             | Flip between canonical and chronological *order* (not just date labels).                  | Button flips `currentDateLayout`, **but verse array isn‚Äôt rebuilt**, so scrolling order never changes.        | ‚Ä¢ Call `setCurrentVerseArray()` after the flag switch (that function is already written).                                                         |
| **Legend (who / what / ‚Ä¶)**         | Check‚Äëboxes visually highlight words.                                                     | The check‚Äëboxes exist, but no event listeners and no word‚Äëlevel `<span>` markup.                              | ‚Ä¢ Load `labels/*/ALL.json` and wrap words in `<span class="lab-who">`‚Ä¶<br>‚Ä¢ Toggle CSS classes `body.show-who` etc.                               |
| **Context borders**                 | Toggling shows light‚Äëblue boxes around groups from `context_groups.json`.                 | File is never fetched; toggle just flips `detailsShown`.                                                      | ‚Ä¢ Fetch JSON once; add a class to each row if its verseKey is in the active set; CSS draws border.                                                |
| **Global search**                   | Search **all active translations**; `%` jumps to random verse.                            | Search only filters the *current* translation and `%` isn‚Äôt handled.                                          | ‚Ä¢ Iterate over `selectedTranslations` and add the wildcard branch.                                                                                |
| **Strong‚Äôs overlay**                | Double‚Äëclick verse ‚áí word boxes; click box ‚áí list verses that share that Strong‚Äôs number. | Overlay opens, but word boxes are never injected and the worker isn‚Äôt called.                                 | ‚Ä¢ Read `strongsVerses[verseKey]`, build `<span data-str=‚Ä¶>`; send ID to `searchWorker`.                                                           |
| **Web‚ÄëWorker off‚Äëload**             | Heavy tasks (search, Strong‚Äôs look‚Äëups) off main thread.                                  | `searchWorker.js` exists in repo‚ÄØ#2 but is not hooked up in this build.                                       | ‚Ä¢ Hook worker up and post heavy queries to it.                                                                                                    |
| **Drag‚Äëreorderable headers & Lock** | Columns can be dragged unless ‚ÄúLock Layout‚Äù is on.                                        | No drag listeners; `lockLayout` flag is unused.                                                               | ‚Ä¢ Add SortableJS (‚âà15‚ÄØlines) and a guard for the lock flag.                                                                                       |
| **Bookmarks: delete**               | Users can remove a saved bookmark.                                                        | UI only *adds* bookmarks.                                                                                     | ‚Ä¢ Add a small üóë button or context‚Äëmenu and call `supabase.from('bookmarks').delete()`.                                                           |
| **Forum duplicate vote guard**      | One vote per user per post.                                                               | No unique constraint yet; duplicate inserts succeed.                                                          | ‚Ä¢ Add `PRIMARY KEY (user_id, post_id)` (already in SQL stub) and catch `23505` error client‚Äëside.                                                 |
| **Initial load speed**              | <‚ÄØ2‚ÄØs FCP on mobile.                                                                      | All 12 √ó‚ÄØ600‚ÄØKB translation files + 70‚ÄØMB Strong‚Äôs load on main thread ‚Üí 5‚Äë10‚ÄØs¬†stall.                        | ‚Ä¢ Stream¬†`fetch` + Web‚ÄØWorkers so UI paints while the rest downloads.                                                                             |

### Why you see ‚Äúit *looks* finished‚Äù

*The CSS & DOM shell are immaculate*, so every button, column, and toggle *visually exists*. That makes the page feel ‚Äúalmost done.‚Äù But under the hood many handlers are placeholders, and some heavy work still blocks the UI thread. The punch‚Äëlist above is everything that still separates the beautiful fa√ßade from the fully‚Äëfunctional site described in your own site map.

Once those items are in place:

* The 3rd branch will *match every functional bullet* of the site map,
* keep the high‚ÄëFPS scrolling from the prototype, and
* retain its present pixel‚Äëperfect design.


