hey i can't completely test out what you did because it looks like the virtual bible table appears really quickly and then vanishes

heres a list of changes I've come up with that might be the cure

Why the table flashes, then vanishes
VirtualBibleTable now drives the page, but totalRows isn’t being passed.
When totalRows is undefined,

ts
Copy
Edit
const totalHeight = totalRows * ROW_HEIGHT;   //  undefined × 120 → NaN
``` :contentReference[oaicite:0]{index=0}  
The inner placeholder `<div>` gets `style="height: NaNpx"` and collapses to **0 px**.  
On first paint React still puts the buffered rows on screen, so you see a split-second flash; as soon as the second render applies the broken height, the whole scroll area disappears.

The rows themselves are fine.
Every <VerseRow> is given a global data-verse-index and absolute top: offset, so once their container has height they show up correctly. (You can confirm by forcing height:100000px in dev-tools.)

Three-line proof in the browser console
js
Copy
Edit
const tbl = document.querySelector(".verse-row")?.parentElement;
console.log(tbl.style.height);     //  ""  → NaN never made it to the DOM
console.log(window.getComputedStyle(tbl).height); // "0px"
Try the same after hard-coding totalRows={31102} and the height jumps to ≈3.7 M px and the verses stay on screen.

Fix in one minute
tsx
Copy
Edit
<VirtualBibleTable
  verses={verses}
  totalRows={verses.length}          // ✅ make sure this prop is defined
  selectedTranslations={selected}
  preferences={prefs}
  onExpandVerse={…}
  onNavigateToVerse={…}
/>
If you already have initializeBibleStructure() in the parent, you can pass getTotalVerseCount() straight in.

While you’re in the file …
Quick touch-ups (don’t affect the bug but finish the foundation)
Switch slice math to centre-based so it matches the spec:
Drop setScrollLeft state—the header already follows with ref.style.transform.
Wrap heavy UI toggles in preserveAnchor(() => …) to stop anchor drift.

Those are one-liners; none of them change styling, so your cross-ref and prophecy columns will look exactly the same—just finally stay visible.

