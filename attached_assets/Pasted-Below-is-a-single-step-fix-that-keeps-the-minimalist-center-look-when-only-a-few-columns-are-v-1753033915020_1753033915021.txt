Below is a **single‑step fix** that keeps the minimalist “center” look when only a few columns are visible **and** guarantees you can always scroll all the way to the left once additional columns appear. We remove the flex‑centering trick (which was the root of the clipping) and replace it with a pure‑CSS solution that never hides the left edge.

---

## 1 Replace flex‑centering with `margin‑auto`

#### 1‑A  CSS (3 lines)

```css
/* index.css */
.bible-table-wrapper {
  min-width: fit-content;         /* grows with columns */
  margin-inline: auto;            /* centers when table < viewport */
  overflow: auto;                 /* vertical + horizontal scroll  */
}
```

* Because `margin-inline:auto` works exactly like `text-align:center` for block
  elements, the table centers **only** while its `scrollWidth ≤ viewportWidth`.
* The moment a fourth (or tenth) column is toggled on, `scrollWidth` grows,
  margins collapse to 0, and the **native scroll bar appears**—without clipping
  the left edge.

#### 1‑B  Delete the complex flex wrapper

In **`VirtualBibleTable.tsx`** (or wherever you render the outer `<div>`):

```tsx
{/* OLD: */}
{/* <div className={centered ? "center-wrapper" : ""}> */}
{/*   <div ref={wrapperRef} className="bible-table-wrapper"> */}

{/* NEW – single wrapper div only */}
<div ref={wrapperRef} className="bible-table-wrapper">
```

Remove the `center-wrapper` container and its `useEffect` that toggled classes.
No JavaScript is needed—the CSS rule handles centering vs. scrolling on its own.

> **Result**
>
> * 1–3 columns ➜ table is perfectly centred on any screen.
> * 4+ columns ➜ table sticks to the left, full horizontal scroll range is accessible, nothing is pushed off‑screen.

---

## 2 No changes to slot logic or touch‑direction code

* Slot rendering, widths (`.w-col`), and the “dual‑axis scroll” heuristic remain exactly as they are.
* If you later re‑introduce a dual‑column mode, this wrapper still behaves
  correctly—its width is whatever you set, and `margin-inline:auto`
  automatically falls back to left alignment when wider than the viewport.

---

## 3 Docs update

* **UI\_LAYOUT\_SPEC.md** — replace the old “center‑wrapper flex” sentence with:

  > *“Wrapper uses `margin-inline:auto` so the table is centred while its width is ≤ viewport and left‑aligned with a horizontal scrollbar once wider.”*

No other documentation changes or code paths are affected.

---

### Quick test checklist

1. **3 columns visible** → table centred; no scrollbar.
2. Toggle a 4th column → table snaps to left; horizontal scroll bar appears; you can scroll fully left and right.
3. Repeat on iPhone portrait – same behaviour, with touch‑direction guard intact.

Apply the 3‑line CSS change, remove the extra wrapper, and the clipping issue disappears.
