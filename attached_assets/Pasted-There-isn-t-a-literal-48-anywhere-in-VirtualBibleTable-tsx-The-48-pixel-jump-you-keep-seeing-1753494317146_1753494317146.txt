There isn’t a literal `48` anywhere in **VirtualBibleTable.tsx**.
The 48‑pixel jump you keep seeing is injected **outside** this file:

| Where the “48 px” is coming from                                                                                                                                                                         | How it reaches the screen                                                                                                                                                                                                    |
| -------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |
| **A. CSS variable** – `--top‑header‑height‑mobile: 48px` (in *mobile‑headers.css* / *index.css*)                                                                                                         | In **ColumnHeaders** the sticky wrapper has<br>`top: var(--top-header-height-mobile);`<br>so it sits 48 px below its containing element.                                                                                     |
| **B. Virtual‑list padding / translate** – the library adds a `padding‑top: 48px` or `transform: translateY(48px)` to its scroll‑inner div so that verse rows don’t scroll under the fixed top nav.       | Because ColumnHeaders is rendered **inside** that scroll area, it inherits the library’s 48 px vertical shift before its own `top:` kicks in. The two offsets add up, so the bar lands roughly 96 px below the viewport top. |
| **C. Possible ROW\_HEIGHT = 48** (in `constants/layout.ts`) – only affects the spacer divs that pad out the virtual list; it doesn’t move the header by itself, but confirms 48 px is your row constant. |                                                                                                                                                                                                                              |

### Why you don’t see “48” in VirtualBibleTable.tsx

VirtualBibleTable just:

* passes `topHeaderHeight={72}` to **ColumnHeaders** (that’s 72, not 48), and
* lets the virtual list handle its own inner padding (`<div style={{height: slice.start * ROW_HEIGHT}} />`).

The **library** (or a CSS helper) adds the 48‑px translate / padding automatically; it never appears as a hard‑coded value in this component.

---

## How to remove the duplicate offset

**Option 1 – keep CSS offset, kill virtual‑list padding**

```tsx
// Wherever you create or style the virtual list/container:
const mobileListOffset = 0;          // ← 48 ➜ 0
<List style={{ paddingTop: mobileListOffset }} … />
```

Leave the CSS variable at 48 px:

```css
:root { --top-header-height-mobile: 48px; }
.column-headers-container { top: var(--top-header-height-mobile); }
```

**Option 2 – keep virtual‑list padding, set the header to top 0**

```css
@media (max-width: 640px) {
  .column-headers-container { top: 0 !important; }
}
```

Either way you end up with **one** 48‑px shift instead of two, so the mobile column header snaps precisely against the top of the virtual table.

---

### Quick checklist

1. **Inspect the scroll‑inner div** (the one whose height is huge). If you see `padding-top: 48px` or `transform: translateY(48px)`, that’s the virtual‑list offset.
2. Decide which element should own the offset:

   * If you want CSS to own it → set the list padding/translate to `0`.
   * If you want the list to own it → override the header’s `top` to `0`.
3. Reload; you should now have a single, correct 48‑px gap and the header bar flush against the virtual rows.

So: the 48‑px figure isn’t in **VirtualBibleTable.tsx** at all—it’s coming from your CSS variables and/or the virtualization helper. Adjust one of those and the double offset disappears.
